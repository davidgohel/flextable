on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - test-branch

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', pandoc: '2.19'}
          - {os: macOS-latest, r: 'release', pandoc : '2.19'}
          - {os: ubuntu-20.04, r: 'release', pandoc : '2.19', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04, r: 'release', pandoc : '2.9.2.1', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-latest, r: 'devel', pandoc : '2.19'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: ${{ matrix.config.pandoc }}

      - uses: r-lib/actions/setup-tinytex@v2
        env:
          # install full prebuilt version
          TINYTEX_INSTALLER: TinyTeX

      - name: Add some R options for later steps
        run: |
          cat("\noptions(tinytex.verbose = TRUE)\n", file = "~/.Rprofile", append = TRUE)
          cat(readLines("~/.Rprofile"), sep = "\n")
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Pandoc and Tinytex info
        run: |
          rmarkdown::find_pandoc()
          tinytex::tlmgr("--version")
          tinytex::tl_pkgs()
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2

      - name: Test coverage
        if: success() && runner.os == 'Linux' && matrix.config.r == 'release' && matrix.config.pandoc == '2.19'
        run: |
          pak::pkg_install('covr')
          covr::codecov()
        shell: Rscript {0}
